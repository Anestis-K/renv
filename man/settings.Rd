% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/settings.R
\docType{data}
\name{settings}
\alias{settings}
\title{Project Settings}
\format{An object of class \code{list} of length 3.}
\usage{
settings
}
\description{
Define project-local settings that can be used to adjust the behavior of
\code{renv} with your particular project.
}
\section{Settings}{


\describe{

\item{\code{ignored.packages}}{

A vector of packages, which should be ignored when attempting to snapshot
the project's private library. Note that if a package has already been
added to the lockfile, that entry in the lockfile will not be ignored. \cr

}

\item{\code{external.libraries}}{

A vector of library paths, to be used in addition to the project's own
private library. This can be useful if you have a package available for use
in some global library, but for some reason \code{renv} is not able to install
that package (e.g. sources or binaries for that package are not publicly
available, or you have been unable to orchestrate the pre-requisites for
installing some packages from source on your machine).

}

\item{\code{use.cache}}{

Use a global cache of \R packages. When active, \code{renv} will install
packages into a global cache, and link packages from the cache into your
\code{renv} projects as appropriate. This can greatly save on disk space
and install time when for \R packages which are used across multiple
projects in the same environment.

}

}
}

\section{User-Provided Defaults}{


It is possible to provide your own global defaults for these options.
See \link{config} for more details. This can be useful if you'd like to enforce
certain project settings within new projects.
}

\examples{

# check the 'ignored.packages' option
renv::settings$ignored.packages()

# ignore the 'tidyverse' package in this project
renv::settings$ignored.packages("tidyverse", persist = FALSE)

# cache is turned on by default
renv::settings$use.cache()

# but we can disable it by default
options(renv.config.use.cache = FALSE)
renv::settings$use.cache()

# enable for current project
renv::settings$use.cache(TRUE, persist = FALSE)
renv::settings$use.cache()
}
\keyword{datasets}
