% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{config}
\alias{config}
\title{User-Level Configuration of renv}
\description{
Configure different behaviors of \code{renv}.
}
\details{
For a given configuration option:
\enumerate{
\item If an \R option of the form \code{renv.config.<name>} is available,
then that option's value will be used;
\item If an environment variable of the form \code{RENV_CONFIG_<NAME>} is available,
then that option's value will be used;
\item Otherwise, the default for that particular configuration value is used.
}

Any periods (\code{.})s in the option name are transformed into underscores (\code{_})
in the environment variable name, and vice versa. For example, the
configuration option \code{auto.snapshot} could be configured as:
\itemize{
\item \code{options(renv.config.auto.snapshot = <...>)}
\item \code{Sys.setenv(RENV_CONFIG_AUTO_SNAPSHOT = <...>)}
}

Note that if both the R option and the environment variable are defined, the
R option will be used instead. Environment variables can be more useful when
you want a particular configuration to be automatically inherited by child
processes; if that behavior is not desired, then the R option may be
preferred.

If you want to set and persist these options across multiple projects, it is
recommended that you set them in your user startup files (e.g. in
\code{~/.Rprofile}).
}
\section{Configuration}{


The following \code{renv} configuration options are available:

\tabular{lll}{
\strong{Name} \tab \strong{Type} \tab \strong{Description} \cr

\code{auto.snapshot} \tab \code{logical(1)} \tab
Automatically snapshot changes to the project library after a new package
is installed? Note that package upgrades or removals will not be
automatically snapshotted.
(Boolean; defaults to \code{TRUE}) \cr

\code{sandbox.enabled} \tab \code{logical(1)} \tab
Enable sandboxing for \code{renv} projects? When active, \code{renv} will attempt to
sandbox the system library, preventing user-installed packages in the
system library from becoming available in \code{renv} projects.
(Boolean; defaults to \code{FALSE}) \cr

\code{shims.enabled} \tab \code{logical(1)} \tab
Should \code{renv} shims be installed on package load? When enabled, \code{renv}
will install its own shims over the functions \code{install.packages()},
\code{update.packages()} and \code{remove.packages()}, delegating these functions
to \code{renv::install()} and \code{renv::remove()} as appropriate.
(Boolean; defaults to \code{TRUE}) \cr

\code{snapshot.validate} \tab \code{logical(1)} \tab
Validate \R package dependencies when calling snapshot? When \code{TRUE},
\code{renv} will attempt to diagnose potential issues in the project library
before creating \code{renv.lock} -- for example, if a package installed in the
project library depends on a package which is not currently installed.
(Boolean; defaults to \code{TRUE}) \cr

}
}

\section{Project-Local Settings}{


For settings that should persist alongside a particular project, the
various settings available in \link{settings} can be used.
}

