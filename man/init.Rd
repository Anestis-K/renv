% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Initialize a Project}
\usage{
init(project = NULL, settings = NULL, force = FALSE)
}
\arguments{
\item{project}{The project directory.}

\item{settings}{A list of \link{settings} to be used with the newly-initialized
project.}

\item{force}{Boolean; force initialization? By default, \code{renv} will refuse
to initialize the home directory as a project, to defend against accidental
misusages of \code{init()}.}
}
\description{
Discover packages used within the current project, and then initialize a
project-local private \R library with those packages. The currently-installed
versions of any packages in use (as detected within the default R libraries)
are then installed to the project's private library.
}
\details{
The primary steps taken when initializing a new project are:
\enumerate{
\item \R package dependencies are discovered within the \R files used within
the project with \code{\link[=dependencies]{dependencies()}};
\item Discovered packages are copied into the \code{renv} global package cache, so
these packages can be re-used across future projects as necessary;
\item Any missing \R package dependencies discovered are then installed into
the project's private library;
\item A lockfile capturing the state of the project's library is created
with \code{\link[=snapshot]{snapshot()}};
\item The project is activated with \code{\link[=activate]{activate()}}.
}

This mimics the workflow provided by \code{packrat::init()}, but with more
reasonable default behaviors -- in particular, \code{renv} does not attempt
to download and store package sources, and \code{renv} will re-use packages
that have already been installed whenever possible.
}
\section{Infrastructure}{


\code{renv} will write or amend the following files in the project:
\itemize{
\item \code{.Rprofile}: An auto-loader will be installed, so that new R sessions
launched within the project are automatically loaded.
\item \code{renv/activate.R}: This script is run by the previously-mentioned
\code{.Rprofile} to load the project.
\item \code{renv/.gitignore}: This is used to instruct Git to ignore the project's
private library, as it does not need to be
\item \code{.Rbuildignore}: to ensure that the \code{renv} directory is ignored during
package development; e.g. when attempting to build or install a package
using \code{renv}.
}
}

